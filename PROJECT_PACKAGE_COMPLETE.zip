# REGENT CHA-AM HOTEL - COMPLETE PROJECT PACKAGE
# แพ็คเกจโปรเจคสมบูรณ์สำหรับสร้าง New Project ใน Replit

## วิธีการสร้างโปรเจคใหม่ใน Replit:

### ขั้นตอนที่ 1: สร้าง New Project
1. ไปที่ Replit Dashboard: https://replit.com/
2. คลิก "Create App" 
3. เลือก "Import from GitHub" หรือ "Blank Repl"
4. ตั้งชื่อ: **"Regent-Cha-am-Hotel-Maintenance-System"**
5. เลือก Template: "Node.js"
6. คลิก "Create App"

### ขั้นตอนที่ 2: Setup โปรเจคใหม่
1. ลบไฟล์เริ่มต้นทั้งหมดใน Repl ใหม่
2. Copy ไฟล์ทั้งหมดจากรายการด้านล่าง
3. วาง (Paste) ในโปรเจคใหม่
4. แก้ไขไฟล์ตามที่ระบุ

## ไฟล์ที่ต้อง Copy และแก้ไข:

### A. package.json (แก้ไขใหม่)
```json
{
  "name": "regent-cha-am-hotel-maintenance-system",
  "description": "Hotel maintenance management system for Regent Cha-am Beach Resort",
  "version": "1.0.0",
  "type": "module",
  "main": "dist/index.js",
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build",
    "start": "NODE_ENV=production tsx server/index.ts",
    "db:push": "drizzle-kit push",
    "db:studio": "drizzle-kit studio"
  },
  "keywords": ["hotel", "maintenance", "regent", "cha-am", "react", "express"],
  "author": "Regent Cha-am Beach Resort",
  "license": "ISC",
  "dependencies": {
    "@hookform/resolvers": "^3.3.2",
    "@jridgewell/trace-mapping": "^0.3.20",
    "@neondatabase/serverless": "^0.9.0",
    "@radix-ui/react-accordion": "^1.1.2",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-aspect-ratio": "^1.0.3",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-collapsible": "^1.0.3",
    "@radix-ui/react-context-menu": "^2.1.5",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-hover-card": "^1.0.7",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-menubar": "^1.0.4",
    "@radix-ui/react-navigation-menu": "^1.1.4",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-scroll-area": "^1.0.5",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-toggle": "^1.0.3",
    "@radix-ui/react-toggle-group": "^1.0.4",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@replit/vite-plugin-cartographer": "^1.0.2",
    "@replit/vite-plugin-runtime-error-modal": "^1.0.1",
    "@tailwindcss/typography": "^0.5.10",
    "@tailwindcss/vite": "^4.0.0-alpha.3",
    "@tanstack/react-query": "^5.17.1",
    "@types/bcrypt": "^5.0.2",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/cookie-parser": "^1.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/express-session": "^1.17.10",
    "@types/memoizee": "^0.4.11",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.6",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.2.46",
    "@types/react-dom": "^18.2.18",
    "@types/ws": "^8.5.10",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "^10.4.16",
    "bcrypt": "^5.1.1",
    "chart.js": "^4.4.1",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cmdk": "^0.2.0",
    "connect-pg-simple": "^9.0.1",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "date-fns": "^3.0.6",
    "drizzle-kit": "^0.20.7",
    "drizzle-orm": "^0.29.2",
    "drizzle-zod": "^0.5.1",
    "embla-carousel-react": "^8.0.0",
    "esbuild": "^0.19.11",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "express-session": "^1.17.3",
    "express-validator": "^7.0.1",
    "framer-motion": "^10.18.0",
    "helmet": "^7.1.0",
    "i18next": "^23.7.16",
    "input-otp": "^1.2.4",
    "lucide-react": "^0.306.0",
    "memoizee": "^0.4.15",
    "memorystore": "^1.6.7",
    "multer": "^1.4.5-lts.1",
    "next-themes": "^0.2.1",
    "openid-client": "^5.6.4",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "postcss": "^8.4.32",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.2.0",
    "react-day-picker": "^8.10.0",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.48.2",
    "react-i18next": "^14.0.0",
    "react-icons": "^4.12.0",
    "react-resizable-panels": "^0.0.55",
    "react-window": "^1.8.8",
    "react-window-infinite-loader": "^1.0.9",
    "recharts": "^2.10.3",
    "tailwind-merge": "^2.2.0",
    "tailwindcss": "^3.4.0",
    "tailwindcss-animate": "^1.0.7",
    "tsx": "^4.6.2",
    "tw-animate-css": "^2.0.5",
    "typescript": "^5.3.3",
    "vaul": "^0.8.0",
    "vite": "^5.0.10",
    "wouter": "^3.0.0",
    "ws": "^8.16.0",
    "zod": "^3.22.4",
    "zod-validation-error": "^2.1.0"
  }
}
```

### B. client/src/index.css (ธีมสีฟ้า)
```css
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(222, 84%, 5%);
  --muted: hsl(215, 25%, 27%);
  --muted-foreground: hsl(215, 20%, 65%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(222, 84%, 5%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(222, 84%, 5%);
  --border: hsl(215, 20%, 82%);
  --input: hsl(215, 20%, 82%);
  
  /* Regent Blue Theme */
  --primary: hsl(219, 85%, 58%);
  --primary-foreground: hsl(0, 0%, 100%);
  --secondary: hsl(220, 85%, 55%);
  --secondary-foreground: hsl(0, 0%, 100%);
  --accent: hsl(221, 83%, 53%);
  --accent-foreground: hsl(0, 0%, 100%);
  
  --destructive: hsl(0, 84%, 60%);
  --destructive-foreground: hsl(0, 0%, 100%);
  --ring: hsl(219, 85%, 58%);
  --radius: 0.75rem;
  
  /* Chart colors - Blue theme */
  --chart-1: hsl(219, 85%, 58%);
  --chart-2: hsl(220, 85%, 55%);
  --chart-3: hsl(221, 83%, 53%);
  --chart-4: hsl(215, 85%, 60%);
  --chart-5: hsl(210, 80%, 65%);
}

.dark {
  --background: hsl(222, 84%, 5%);
  --foreground: hsl(210, 40%, 98%);
  --muted: hsl(215, 25%, 16%);
  --muted-foreground: hsl(215, 20%, 65%);
  --popover: hsl(215, 25%, 9%);
  --popover-foreground: hsl(210, 40%, 98%);
  --card: hsl(215, 25%, 9%);
  --card-foreground: hsl(210, 40%, 98%);
  --border: hsl(215, 25%, 18%);
  --input: hsl(215, 25%, 18%);
  --primary: hsl(219, 85%, 58%);
  --primary-foreground: hsl(0, 0%, 100%);
  --secondary: hsl(215, 25%, 16%);
  --secondary-foreground: hsl(0, 0%, 100%);
  --accent: hsl(215, 25%, 16%);
  --accent-foreground: hsl(0, 0%, 100%);
  --destructive: hsl(0, 84%, 60%);
  --destructive-foreground: hsl(0, 0%, 100%);
  --ring: hsl(219, 85%, 58%);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply antialiased text-foreground;
    font-family: 'Inter', 'Poppins', 'Sarabun', sans-serif;
    font-weight: 500;
    background: #2563eb !important;
    background-image: linear-gradient(135deg, #2563eb, #1d4ed8, #1e40af, #3b82f6, #60a5fa) !important;
    background-attachment: fixed;
    min-height: 100vh;
  }

  .text-enhanced {
    color: hsl(222, 84%, 5%);
    font-weight: 600;
    text-shadow: 0 1px 2px rgba(37, 99, 235, 0.1);
    letter-spacing: -0.01em;
  }

  .dark .text-enhanced {
    color: hsl(210, 40%, 98%);
    text-shadow: 0 1px 2px rgba(37, 99, 235, 0.3);
  }

  .text-subtitle-enhanced {
    color: hsl(215, 20%, 45%);
    font-weight: 500;
    letter-spacing: -0.005em;
  }

  .dark .text-subtitle-enhanced {
    color: hsl(215, 20%, 65%);
  }

  .text-white-enhanced {
    color: hsl(0, 0%, 100%);
    font-weight: 500;
    text-shadow: 0 1px 2px rgba(37, 99, 235, 0.4);
    letter-spacing: -0.005em;
  }

  .fade-in {
    animation: fadeIn 0.5s ease-in-out;
  }

  .slide-in {
    animation: slideIn 0.3s ease-out;
  }

  .scale-in {
    animation: scaleIn 0.2s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideIn {
    from { transform: translateY(-10px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes scaleIn {
    from { transform: scale(0.95); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
  }
}
```

### C. client/src/locales/en.json (แก้ไขชื่อโรงแรม)
```json
{
  "app": {
    "title": "Regent Cha-am Hotel Maintenance System",
    "subtitle": "Hotel maintenance request system"
  },
  "auth": {
    "signIn": "Sign In",
    "signOut": "Logout",
    "email": "Email",
    "password": "Password",
    "welcome": "Welcome to Regent Cha-am Hotel",
    "loginRequired": "Please log in to access the system",
    "loginButton": "Login with Replit",
    "loading": "Signing in...",
    "error": "Authentication failed"
  },
  "hotel": {
    "name": "Regent Cha-am Beach Resort",
    "location": "Cha-am, Thailand",
    "subtitle": "Luxury beachfront resort"
  }
  /* ... เก็บส่วนอื่นเหมือนเดิม แต่เปลี่ยนชื่อโรงแรม */
}
```

### D. client/src/locales/th.json (แก้ไขชื่อโรงแรม)
```json
{
  "app": {
    "title": "ระบบแจ้งซ่อมโรงแรมรีเจนท์ ชะอำ",
    "subtitle": "ระบบแจ้งซ่อมสำหรับโรงแรม"
  },
  "auth": {
    "signIn": "เข้าสู่ระบบ",
    "signOut": "ออกจากระบบ",
    "email": "อีเมล",
    "password": "รหัสผ่าน",
    "welcome": "ยินดีต้อนรับสู่โรงแรมรีเจนท์ ชะอำ",
    "loginRequired": "กรุณาเข้าสู่ระบบเพื่อใช้งาน",
    "loginButton": "เข้าสู่ระบบด้วย Replit",
    "loading": "กำลังเข้าสู่ระบบ...",
    "error": "การเข้าสู่ระบบล้มเหลว"
  },
  "hotel": {
    "name": "โรงแรมรีเจนท์ ชะอำ บีช รีสอร์ท",
    "location": "ชะอำ ประเทศไทย",
    "subtitle": "รีสอร์ทหรูริมทะเล"
  }
  /* ... เก็บส่วนอื่นเหมือนเดิม แต่เปลี่ยนชื่อโรงแรม */
}
```

### E. shared/schema.ts (ใช้เวอร์ชัน Regent)
```typescript
import { pgTable, serial, varchar, text, timestamp, boolean, integer, jsonb } from "drizzle-orm/pg-core";
import { createInsertSchema, createSelectSchema } from "drizzle-zod";
import { relations } from "drizzle-orm";
import { z } from "zod";

export const users = pgTable("users", {
  id: serial("id").primaryKey(),
  email: varchar("email", { length: 255 }).notNull().unique(),
  password: varchar("password", { length: 255 }),
  firstName: varchar("first_name", { length: 100 }),
  lastName: varchar("last_name", { length: 100 }),
  role: varchar("role", { length: 20 }).default("staff").$type<"admin" | "manager" | "staff" | "technician">(),
  language: varchar("language", { length: 2 }).default("th").$type<"en" | "th">(),
  avatarUrl: text("avatar_url"),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

export const repairs = pgTable("repairs", {
  id: serial("id").primaryKey(),
  userId: integer("user_id").references(() => users.id),
  room: varchar("room", { length: 10 }).notNull(),
  category: varchar("category", { length: 20 }).notNull().$type<"electrical" | "plumbing" | "airconditioning" | "furniture" | "other">(),
  urgency: varchar("urgency", { length: 10 }).notNull().$type<"low" | "medium" | "high">(),
  description: text("description").notNull(),
  status: varchar("status", { length: 20 }).default("pending").$type<"pending" | "inProgress" | "completed">(),
  technicianId: integer("technician_id").references(() => users.id),
  images: text("images").array(),
  notes: text("notes"),
  estimatedCompletion: timestamp("estimated_completion"),
  actualCompletion: timestamp("actual_completion"),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

export const notifications = pgTable("notifications", {
  id: serial("id").primaryKey(),
  userId: varchar("user_id", { length: 255 }).notNull(),
  title: varchar("title", { length: 255 }).notNull(),
  message: text("message").notNull(),
  type: varchar("type", { length: 20 }).default("info").$type<"info" | "success" | "warning" | "error">(),
  read: boolean("read").default(false),
  data: jsonb("data"),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

export const userSessions = pgTable("user_sessions", {
  sid: varchar("sid").primaryKey(),
  sess: jsonb("sess").notNull(),
  expire: timestamp("expire").notNull(),
});

// Relations และ schemas เหมือนเดิม...
/* ... copy ส่วน relations และ zod schemas ทั้งหมด */
```

## ขั้นตอนการสร้างโปรเจคใหม่:

### 1. สร้าง New Project ใน Replit
- ชื่อ: "Regent-Cha-am-Hotel-Maintenance-System"
- Template: Node.js

### 2. Copy และแก้ไขไฟล์ทั้งหมด
- Copy โครงสร้างไฟล์ทั้งหมดจากโปรเจคเดิม
- แทนที่ไฟล์สำคัญตามรายการข้างต้น

### 3. ตั้งค่าฐานข้อมูลใหม่
- สร้าง PostgreSQL database ใหม่ใน Replit
- รัน setup script สำหรับสร้างตาราง

### 4. Deploy โปรเจคใหม่
- ทดสอบระบบ
- Deploy และได้ URL ใหม่

## ผลลัพธ์:
คุณจะได้โปรเจคใหม่สมบูรณ์:
- URL: regent-cha-am-hotel-maintenance-system-[username].replit.app
- ฐานข้อมูลแยกสมบูรณ์
- ธีมสีฟ้า Regent branding
- ข้อมูลไม่ปะปนกับ Vala Hotel

แพ็คเกจนี้รองรับการสร้างโปรเจคใหม่แยกสมบูรณ์ใน Replit!